import java.nio.file.Paths

apply plugin: 'com.android.library'

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

// https://github.com/facebook/react-native/blob/a70354df12ef71aec08583cca4f1fed5fb77d874/ReactAndroid/build.gradle#L168-L201
def findNodeModulePath(baseDir, packageName) {
  def basePath = baseDir.toPath().normalize()
  // Node's module resolution algorithm searches up to the root directory,
  // after which the base path will be null
  while (basePath) {
    def candidatePath = Paths.get(basePath.toString(), "node_modules", packageName)
    if (candidatePath.toFile().exists()) {
      return candidatePath.toString()
    }
    basePath = basePath.getParent()
  }
  return null
}

def moduleDir = findNodeModulePath(projectDir, "@stream-io/react-native-webrtc") ?: "$rootDir/../node_modules/@stream-io/react-native-webrtc"
println ":${project.name} found at $moduleDir"

rootProject.allprojects {
  repositories {
    flatDir {
      dirs "$moduleDir/android/libs"
    }
  }
}

android {
    def agpVersion = com.android.Version.ANDROID_GRADLE_PLUGIN_VERSION
    if (agpVersion.tokenize('.')[0].toInteger() >= 7) {
      namespace "com.oney.WebRTCModule"
    }

    compileSdkVersion safeExtGet('compileSdkVersion', 24)
    buildToolsVersion safeExtGet('buildToolsVersion', "23.0.1")

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion safeExtGet('targetSdkVersion', 24)
        versionCode 1
        versionName "1.0"
    }

    // WebRTC requires Java 8 features
    // https://groups.google.com/forum/?utm_medium=email&utm_source=footer#!msg/discuss-webrtc/V1h2uQMDCkA/RA-uzncVAAAJ
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    api(name: 'stream_libwebrtc_m125.3', ext: 'aar')
    implementation 'com.facebook.react:react-native:+'
    implementation "androidx.core:core:1.7.0"
}
